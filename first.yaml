openapi: 3.0.0
servers:
  - url: 'http://localhost:3000'
info:
  description: 'Product'
  version: 1.0.0
  title: Products Management
paths:
  /products:
    get:
      tags:
        - product
      summary: Shows all product products
      description: Shows all product
      operationId: getAllProduct
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                type: string
  '/products/category/{cname}':
    get:
      tags:
        - product
      summary: See all categories
      description: Returns all the products of the given category
      operationId: getAllscategories
      parameters:
        - name: cname
          in: path
          description: Categories of products
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                type: string
  '/products/category':
    get:
      tags:
        - product
      summary: Find product by category
      description: Returns all the products of the given category
      operationId: getProductsBycategory
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                type: string
  '/products/brand':
    get:
      tags:
        - product
      summary: Find product of all brands
      description: Returns all the products of the given brand
      operationId: getAllbrands
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                type: string

  '/products/brand/{bname}':
    get:
      tags:
        - product
      summary: Find product by brand
      description: Returns all the products of the given brand
      operationId: getProductsBybrand
      parameters:
        - name: bname
          in: path
          description: Brand of products
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                type: string
  /product/insert:
    post:
      tags:
        - product
      summary: Add a new pet to the store
      description: ''
      operationId: addPet
      parameters:
        - in: query
          name: user
          description: The user to create.
          schema:
            type: object
            required:
              - userName
            properties:
              name:
                type: string
              Category:
                type: string
              Price:
                type: integer
              Discount:
                type: boolean
              TaxPercentage:
                type: string
              State:
                type: string
              SKU:
                type: string
              Brand:
                type: string
              Media:
                type: string
      responses:
        201:
          description: Created
  /products/SKU:
    get:
      tags:
        - product
      summary: SKU of all products
      description: Returns SKU of all products
      operationId: ViewProductsBySKU
      parameters:
        - name: SKU
          in: query
          description: Brand of products
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                type: string
  /products/findByStatus:
    get:
      tags:
        - retail
      summary: Live/Draft
      description: Multiple status values can be provided with comma separated strings
      operationId: findProductsByStatus
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - Live
                - Draft
              default: available
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                type: string
  /product/SKU:
    delete:
      tags:
        - product
      summary: Deletes a product by product id
      description: ''
      operationId: deletePet
      parameters:
        - name: pid
          in: query
          description: Product id to delete
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Product not found
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  /products/retail:
    get:
      tags:
        - retail
      summary: Sold Online or Physical
      description: Multiple status values can be provided with comma separated strings
      operationId: findProductByretail
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - Physical
                - Digital
              default: available
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                type: string
  /products/discount:
    put:
      tags:
        - price
      summary: Modify Discount of products.
      description: ''
      operationId: modifydiscount
      parameters:
        - in: query
          name: product
          description: The user to create.
          schema:
            type: object
            required:
              - name
            properties:
              SKU:
                type: string
              Discount:
                type: integer
      responses:
        201:
          description: Created
  /products/discounts:
    get:
      tags:
        - price
      summary: Shows all product having discounts.
      description: Shows all product
      operationId: getAllDiscounts
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                type: string
  '/products/{SKU}/MRP':
    get:
      tags:
        - price
      summary: gets MRP of a product including taxes and discounts.
      description: Displays MRP, Base Price ,Taxes and Discounts.
      operationId: getMRP
      parameters:
        - name: SKU
          in: path
          description: Brand of products
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                type: string
  /products/parentchild:
    get:
      tags:
        - product
      summary: All the parent products and their child products
      description: Shows all the parent and child products
      operationId: getParentChild
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                type: string
  'products/{SKU}/Stock':
    get:
      tags:
        - retail
      summary: IN STOCK or OUT OF STOCK
      description: Given SKU id it gives the information on weather the product is in stock or out of stock
      operationId: getStock
      parameters:
        - name: SKU
          in: path
          description: Brand of products
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                type: string
  '/products/{SKU}/variations':
    get:
      tags:
        - product
      summary: Sizes,colors of given product id.
      description: Returns all the variations avalaible of the product.
      operationId: getProductsVariation
      parameters:
        - name: SKU
          in: path
          description: Brand of products
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                type: string        
  /Cart:
    get:
      tags:
        - Cart
      summary: Add products in cart
      description: Logged in users can br added to cart 
      operationId: AddProucts
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - "One Plus 6T"
                - "Mi A1"
                - "Mi 4i"
                - "Dove Hair Fall Rescue Shampoo"
                - "Pantene Hair Color Control Shampoo"
                - "Dove Hair Fall Rescue for Men"
                - "Rainbow Six Seige"
                - "Apex Legends"
                - "Dove Dry Hair Fall Rescue Shampoo"
              default: available
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                type: string
  /order:
    get:
      tags:
        - Order
      summary: Order all the products in the cart
      description: Orders all the product currently in the cart and shows the Total price.
      operationId: PlaceOrder
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                type: string              
    
  